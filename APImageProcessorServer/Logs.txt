15 Dec - Opened image
15 Dec - Wrote image to file
16 Dec - Sent image over the network using UDP
References:
https://stackoverflow.com/a/20321262
https://docs.opencv.org/3.4/dc/d84/group__core__basic.html
https://learnopencv.com/image-resizing-with-opencv/
https://stackoverflow.com/questions/20314524/c-opencv-image-sending-through-socket
https://www.opencv-srf.com/p/introduction.html
https://www.opencv-srf.com/2017/11/load-and-display-image.html
https://www.opencv-srf.com/2017/11/opencv-cpp-api.html
https://www.opencv-srf.com/2018/01/save-images-and-videos-to-file.html

17 Dec - Added image size intimation by client
Reference:
https://en.cppreference.com/w/cpp/error/invalid_argument

18 Dec - Learnt thread pooling.
References:
https://www.cnblogs.com/sinkinben/p/16064857.html
https://www.youtube.com/watch?v=6re5U82KwbY
https://en.cppreference.com/w/cpp/thread/packaged_task
https://cplusplus.com/doc/oldtutorial/templates/
https://cplusplus.com/reference/memory/make_shared/
https://cplusplus.com/reference/functional/bind/
https://www.programiz.com/cpp-programming/lambda-expression
https://cplusplus.com/reference/type_traits/result_of/
https://stackoverflow.com/questions/6666259/how-to-get-windows-thread-pool-to-call-class-member-function

20 Dec - Integrated thread pool with server.
References: (to overload () operator in ThreadPool which ended up not being used)
https://en.cppreference.com/w/cpp/language/operators
https://en.cppreference.com/w/cpp/language/copy_assignment

21 Dec - Implemented concurrent client handling capability on server by using a separate queue for each client and saving queue for clients in a map. Server can now handle concurrent requests, although order of receiving payload is not always the same. Need to implement sequencing by sending a sequence number with each payload, storing them at server in a map of sequence_num->image_data, then iterating through i=0 to number of payloads and appending value of each entry to the imageDataString.
No references.

22 Dec - Added sequence number to payload so order is maintained while re-constructing image.
22 Dec - Stopped enqueueing last payload size. Wasn't using it, and it was somehow intermittently pushing an empty message into the queue.
22 Dec - Ensured data integrity - client will keep sending data until server returns positive ack. Used a map to keep track of missing sequence numbers. Now client thread does not need to sleep between sending payloads. Server sends a nack if no data was recd from client after a timeout period (currently 2 secs).
22 Dec - Tested with 8 parallel threads on a thread pool of 4 threads.
References:
https://gist.github.com/listnukira/4045436 for displaying ip and port of sockets in different client threads. Same port was displayed.
https://stackoverflow.com/a/19255203 to convert thread id to string.
https://stackoverflow.com/a/46240575 to convert current system time to string.
https://gist.github.com/mandyedi/ae68a3191096222c62655d54935e7bb2 to redirect cout buffer to external file.

24 Dec - Implemented resize filter using nearest neighbor scaling algorithm.
24 Dec - Implemented rotate filter.
References:
https://courses.cs.vt.edu/~masc1044/L17-Rotation/ScalingNN.html
https://courses.cs.vt.edu/~masc1044/L17-Rotation/rotateScale.html

25 Dec - Implemented Crop filter.
25 Dec - Implemented Flip filter.
25 Dec - Implemented RGB to Grayscale filter using the Luminosity method.
References:
https://www.baeldung.com/cs/convert-rgb-to-grayscale
https://answers.opencv.org/question/26133/using-matat-with-single-channel-image/
https://docs.opencv.org/2.4/modules/core/doc/operations_on_arrays.html#split

26 Dec - Implemented brightness adjustment filter.
References:
https://www.dfstudios.co.uk/articles/programming/image-programming-algorithms/image-processing-algorithms-part-4-brightness-adjustment/	

27 Dec - Added support for command line arguments.
27 Dec - Added client-side validations for filter parameters submitted by the user.
27 Dec - Added image metadata to payload.
27 Dec - Added functionality for server to send image back to client reliably.
No references.

28 Dec - Added queue at client end to receive server msgs. This sped up processing at client side.
Without queue, client needed 35 iterations to receive image data from server, and the time difference b/w server receiving image and sending back to client was ~60 secs.
With queue, client needed only 6 iterations, and the time difference was reduced to ~10 secs. These figures remained the same for processing of 2 images in parallel.
References:
For thread-safe functions to access shared loop variables: https://stackoverflow.com/a/5927246

29 Dec - Added factory classes for Filters and FilterValidators at both server and client.
29 Dec - Implemented server side validations for image metadata.
29 Dec - Added capability to apply requested filter at server.
Filter request format:
1. Resize <Target Width> <Target Height> e.g. Resize 800 600
2. Rotate <Direction: 0 - Clockwise, 1 - Anti-clockwise> <Number of turns> e.g. Rotate 0 3
3. Crop <X-coordinate of top left corner of desired image> <Y-coordinate of top left corner of desired image> <Target width> <Target height> e.g. Crop 750 50 300 1000
4. Flip <Direction: 0 - Horizontal, 1 - Vertical> e.g. Flip 1
5. Grayscale
6. Brightness <Brigthness Adjustment Factor: 0 to n, where 0 will return a completely dark picture, 1 will return the same picture and 2 will double the brightness> e.g. Brightness 2.5
29 Dec - Added image file size in metadata payload. This communicates actual number of bytes to expect, as often the image size is not exactly equal to width*height*number of channels, such as in Grayscale conversion or Brightness adjustment. In such cases, image dimensions stay the same but image size differs.
29 Dec - Added functionality to construct image from payload map depending on the number of channels. This enables image construction for Grayscale filter.
